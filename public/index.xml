<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>theokwebb</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on theokwebb</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 11 Apr 2024 16:02:59 +0900</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Interrupt Handling and Stack Switching in x86-64 Architecture</title>
      <link>http://localhost:1313/posts/interrupt-handling-and-stack-switching/</link>
      <pubDate>Thu, 11 Apr 2024 16:02:59 +0900</pubDate>
      <guid>http://localhost:1313/posts/interrupt-handling-and-stack-switching/</guid>
      <description>Prelude In this post I will attempt to explain interrupt handling and stack switching in x86-64 architecture. I decided to write this because I couldn&amp;rsquo;t understand the interrupt procedure call or how stack switches work in a lab from Xeno’s Architecture 2001: x86-64 OS Internals course at OpenSecurityTraining2. Therefore, with the help of Xeno’s slides and the Intel manual, I have tried to simplify and explain these topics here.&#xA;For anyone curious about the lab that started it all, I have also put together a writeup here.</description>
    </item>
  </channel>
</rss>
